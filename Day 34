Leetcode Q19. Remove Nth Node From End of List

Code:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

//this can be done through slow fast pointer approach as well 

    int calcLen(ListNode* &head){
        ListNode* temp=head;
        int len=0;
        while(temp!=NULL){
            temp=temp->next;
            len++;
        }
        return len;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int node=0;
        int len = calcLen(head);
        if(len-n==0) return head->next;
        ListNode* temp=head;
        ListNode* prev=head;
        while(node<(len-n)){
            cout<<len<<endl;
            prev=temp;
            temp=temp->next;
            node++;
        }
        prev->next=temp->next;
        temp->next=NULL;
        return head;
    }
};
