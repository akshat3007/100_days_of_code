Leetcode Q169. Majority Element

Code:

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        //map method:
        map<int,int>mp;
        for(int i=0;i<nums.size();i++){
            if(mp.find(nums[i])==mp.end()) mp[nums[i]]=1;
            else mp[nums[i]]++;
        }
        for(auto &it: mp){
            if(it.second>nums.size()/2) return it.first;
        }
        return 0;

        //mathematical method:

        // int freq=0, c=0, ans=0, count=-1;
        // sort(nums.begin(), nums.end());
        // if(nums.size()==1) return nums[0];
        // for(int i=0;i<nums.size()-1;i++){
        //     if(nums[i]!=nums[i+1]){
        //         freq=i-c+1;    
        //         c=i+1;
        //     }
        //     else{
        //         if(i+1==nums.size()-1){
        //             freq=(i+1)-c+1;
        //         }
        //     }
        //     if(freq>count){
        //         ans=nums[i];
        //         count=freq;
        //     }   
        // }
        // return ans;


    }
};
